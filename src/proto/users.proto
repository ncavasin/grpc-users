syntax = "proto3";

package users;

// Expose service
service UsersService{
  // Endpoints
  rpc findById(UserById) returns (User){}
  rpc findByDni(UserByDni) returns (User){}
  rpc findByName(UserByName) returns (User){}
  rpc findAll(Empty) returns (UsersList){}
  rpc createUser(UserDto) returns (User){}
  rpc updateUser(User) returns (User){}
  rpc deactivateUser(UserById) returns (User){}
  rpc deleteUser(UserById) returns (User){}
}

// Receives a query with id as param
message UserById{
  int32 id = 1;
}

// Receives a query with dni as param
message UserByDni{
  int32 dni = 1;
}

// Receives a query with name as param
message UserByName{
  string name = 1;
}

message Empty{
  // Void on purpose
}

message UserDto{
  optional int32 dni = 1;
  optional string name = 2;
  optional string email = 3;
  optional bool active = 4;
}


// Returning message for every query received
message User{
  int32 id = 1;
  int32 dni = 2;
  string name = 3;
  string email = 4;
  bool active = 5;
}

// List of users
message UsersList{
  repeated User user = 1;
}